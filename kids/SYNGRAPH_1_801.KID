KIDS Distribution saved on Jun 22, 2019@17:51:22
graph file for the vaready branch of SYN
**KIDS**:SYN*1.0*801^

**INSTALL NAME**
SYN*1.0*801
"BLD",10662,0)
SYN*1.0*801^VISTA SYNTHETIC DATA LOADER^0^3190622^y
"BLD",10662,1,0)
^^3^3^3190622^
"BLD",10662,1,1,0)
Created by George Lilly on 20190621 for the vaready branch of the VistA 
"BLD",10662,1,2,0)
FHIR Patient Loader. Transports file 2002.801 which is in the global
"BLD",10662,1,3,0)
SYNGRAPH(2002.801). Includes SYNGRAF which interfaces to this new file.
"BLD",10662,4,0)
^9.64PA^2002.801^1
"BLD",10662,4,2002.801,0)
2002.801
"BLD",10662,4,2002.801,222)
y^y^f^^^^n
"BLD",10662,4,"B",2002.801,2002.801)

"BLD",10662,6.3)
1
"BLD",10662,"KRN",0)
^9.67PA^779.2^20
"BLD",10662,"KRN",.4,0)
.4
"BLD",10662,"KRN",.401,0)
.401
"BLD",10662,"KRN",.402,0)
.402
"BLD",10662,"KRN",.403,0)
.403
"BLD",10662,"KRN",.5,0)
.5
"BLD",10662,"KRN",.84,0)
.84
"BLD",10662,"KRN",3.6,0)
3.6
"BLD",10662,"KRN",3.8,0)
3.8
"BLD",10662,"KRN",9.2,0)
9.2
"BLD",10662,"KRN",9.8,0)
9.8
"BLD",10662,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",10662,"KRN",9.8,"NM",1,0)
SYNGRAF^^0^B29828945
"BLD",10662,"KRN",9.8,"NM","B","SYNGRAF",1)

"BLD",10662,"KRN",19,0)
19
"BLD",10662,"KRN",19.1,0)
19.1
"BLD",10662,"KRN",101,0)
101
"BLD",10662,"KRN",409.61,0)
409.61
"BLD",10662,"KRN",771,0)
771
"BLD",10662,"KRN",779.2,0)
779.2
"BLD",10662,"KRN",870,0)
870
"BLD",10662,"KRN",8989.51,0)
8989.51
"BLD",10662,"KRN",8989.52,0)
8989.52
"BLD",10662,"KRN",8994,0)
8994
"BLD",10662,"KRN","B",.4,.4)

"BLD",10662,"KRN","B",.401,.401)

"BLD",10662,"KRN","B",.402,.402)

"BLD",10662,"KRN","B",.403,.403)

"BLD",10662,"KRN","B",.5,.5)

"BLD",10662,"KRN","B",.84,.84)

"BLD",10662,"KRN","B",3.6,3.6)

"BLD",10662,"KRN","B",3.8,3.8)

"BLD",10662,"KRN","B",9.2,9.2)

"BLD",10662,"KRN","B",9.8,9.8)

"BLD",10662,"KRN","B",19,19)

"BLD",10662,"KRN","B",19.1,19.1)

"BLD",10662,"KRN","B",101,101)

"BLD",10662,"KRN","B",409.61,409.61)

"BLD",10662,"KRN","B",771,771)

"BLD",10662,"KRN","B",779.2,779.2)

"BLD",10662,"KRN","B",870,870)

"BLD",10662,"KRN","B",8989.51,8989.51)

"BLD",10662,"KRN","B",8989.52,8989.52)

"BLD",10662,"KRN","B",8994,8994)

"FIA",2002.801)
GRAPH
"FIA",2002.801,0)
^SYNGRAPH(2002.801,
"FIA",2002.801,0,0)
2002.801
"FIA",2002.801,0,1)
y^y^f^^^^n
"FIA",2002.801,0,10)

"FIA",2002.801,0,11)

"FIA",2002.801,0,"RLRO")

"FIA",2002.801,0,"VR")
1.0^SYN
"FIA",2002.801,2002.801)
0
"MBREQ")
0
"PKG",586,-1)
1^1
"PKG",586,0)
VISTA SYNTHETIC DATA LOADER^SYN^Synthetic FHIR Patients Loader
"PKG",586,22,0)
^9.49I^1^1
"PKG",586,22,1,0)
1.0
"PKG",586,22,1,"PAH",1,0)
801^3190622
"PKG",586,22,1,"PAH",1,1,0)
^^3^3^3190622
"PKG",586,22,1,"PAH",1,1,1,0)
Created by George Lilly on 20190621 for the vaready branch of the VistA 
"PKG",586,22,1,"PAH",1,1,2,0)
FHIR Patient Loader. Transports file 2002.801 which is in the global
"PKG",586,22,1,"PAH",1,1,3,0)
SYNGRAPH(2002.801). Includes SYNGRAF which interfaces to this new file.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","SYNGRAF")
0^1^B29828945
"RTN","SYNGRAF",1,0)
SYNGRAF        ;ven/gpl - mash graph utilities ; 9/24/17 4:33pm
"RTN","SYNGRAF",2,0)
 ;;1.0;norelease;;feb 27, 2017;Build 1
"RTN","SYNGRAF",3,0)
 ;
"RTN","SYNGRAF",4,0)
 ;
"RTN","SYNGRAF",5,0)
 q
"RTN","SYNGRAF",6,0)
 ;
"RTN","SYNGRAF",7,0)
 ; All the public entry points for these routines are found in SYNWD
"RTN","SYNGRAF",8,0)
 ;
"RTN","SYNGRAF",9,0)
setroot(graph) ; root of working storage
"RTN","SYNGRAF",10,0)
 new %y set %y=$order(^SYNGRAPH(2002.801,"B",graph,""))
"RTN","SYNGRAF",11,0)
 if %y="" set %y=$$addgraph(graph) ; if graph is not present, add it
"RTN","SYNGRAF",12,0)
 quit $name(^SYNGRAPH(2002.801,%y)) ; root for graph
"RTN","SYNGRAF",13,0)
 ;
"RTN","SYNGRAF",14,0)
rootOf(graph) ; return the root of graph named graph
"RTN","SYNGRAF",15,0)
 new %x1 set %x1=$order(^SYNGRAPH(2002.801,"B",graph,""))
"RTN","SYNGRAF",16,0)
 if %x1="" quit -1
"RTN","SYNGRAF",17,0)
 quit $name(^SYNGRAPH(2002.801,%x1,"graph"))
"RTN","SYNGRAF",18,0)
 ;
"RTN","SYNGRAF",19,0)
addgraph(graph) ; makes a place in the graph file for a new graph
"RTN","SYNGRAF",20,0)
 n fien s fien=$o(^SYNGRAPH(2002.801,"B",graph,""))
"RTN","SYNGRAF",21,0)
 i fien'="" q fien
"RTN","SYNGRAF",22,0)
 ;s fien=$o(^XTMP("SYNGRAPH"," "),-1)+1
"RTN","SYNGRAF",23,0)
 ;s ^XTMP("SYNGRAPH",fien,0)=graph
"RTN","SYNGRAF",24,0)
 ;s ^XTMP("SYNGRAPH","B",graph,fien)=""
"RTN","SYNGRAF",25,0)
 ;q fien
"RTN","SYNGRAF",26,0)
 ;
"RTN","SYNGRAF",27,0)
 ;new fda set fda(17.040801,"?+1,",.01)=graph
"RTN","SYNGRAF",28,0)
 new fda set fda(2002.801,"?+1,",.01)=graph
"RTN","SYNGRAF",29,0)
 new %yerr
"RTN","SYNGRAF",30,0)
 do UPDATE^DIE("","fda","","%yerr")
"RTN","SYNGRAF",31,0)
 new %y set %y=$order(^SYNGRAPH(2002.801,"B",graph,""))
"RTN","SYNGRAF",32,0)
 quit %y
"RTN","SYNGRAF",33,0)
 ;
"RTN","SYNGRAF",34,0)
purgegraph(graph) ; delete a graph
"RTN","SYNGRAF",35,0)
 new %y set %y=$order(^SYNGRAPH(2002.801,"B",graph,""))
"RTN","SYNGRAF",36,0)
 if %y="" quit 0
"RTN","SYNGRAF",37,0)
 ;k ^XTMP("SYNGRAPH",%y)
"RTN","SYNGRAF",38,0)
 ;k ^XTMP("SYNGRAPH","B",graph,%y)
"RTN","SYNGRAF",39,0)
 ;q
"RTN","SYNGRAF",40,0)
 ;
"RTN","SYNGRAF",41,0)
 new fda set fda(2002.801,%y_",",.01)="@"
"RTN","SYNGRAF",42,0)
 new %yerr
"RTN","SYNGRAF",43,0)
 do UPDATE^DIE("","fda","","%yerr")
"RTN","SYNGRAF",44,0)
 if '$data(%yerr) quit 1
"RTN","SYNGRAF",45,0)
 zwr %yerr
"RTN","SYNGRAF",46,0)
 quit 0 
"RTN","SYNGRAF",47,0)
 ;
"RTN","SYNGRAF",48,0)
insert2graph(ary,graph,replace) ; insert a new entry to a graph
"RTN","SYNGRAF",49,0)
 ; ary is passed by name, graph is the name of the graph
"RTN","SYNGRAF",50,0)
 ; if replace=1 the graph will be killed first before merge
"RTN","SYNGRAF",51,0)
 new root set root=$$setroot(graph)
"RTN","SYNGRAF",52,0)
 new groot set groot=$name(@root@("graph"))
"RTN","SYNGRAF",53,0)
 new id set id=$order(@ary@(""))
"RTN","SYNGRAF",54,0)
 if replace=1 kill @groot@(id) 
"RTN","SYNGRAF",55,0)
 merge @groot=@ary
"RTN","SYNGRAF",56,0)
 quit
"RTN","SYNGRAF",57,0)
 ;
"RTN","SYNGRAF",58,0)
nameThis(altname) ; returns the id to be used for altname
"RTN","SYNGRAF",59,0)
 ; this will eventually use the context graph and the 
"RTN","SYNGRAF",60,0)
 ; local variable context to query the altname and obtain an id
"RTN","SYNGRAF",61,0)
 new result
"RTN","SYNGRAF",62,0)
 if $data(context) set result=$$queryContext(context,"id",altname) q result
"RTN","SYNGRAF",63,0)
 if altname="background-dd-map" set result="sbform" quit result
"RTN","SYNGRAF",64,0)
 quit altname
"RTN","SYNGRAF",65,0)
 ;
"RTN","SYNGRAF",66,0)
getThis(rary,fn,nocache) ; find a file and read it into rary array  
"RTN","SYNGRAF",67,0)
 new ary
"RTN","SYNGRAF",68,0)
 if '$g(nocache) do fromCache("ary",fn)
"RTN","SYNGRAF",69,0)
 if $d(ary) do  quit  ;
"RTN","SYNGRAF",70,0)
 . merge @rary=ary
"RTN","SYNGRAF",71,0)
 do queryTag("ary",fn)
"RTN","SYNGRAF",72,0)
 if '$d(ary) do  quit  ;
"RTN","SYNGRAF",73,0)
 . write !,"error retrieving array ",fn
"RTN","SYNGRAF",74,0)
 new file set file=$order(ary(1,"file",""))
"RTN","SYNGRAF",75,0)
 new dir set dir=$order(ary(1,"localdir",""))_"/"
"RTN","SYNGRAF",76,0)
 new tmp set tmp=$name(^TMP("yottawrk",$J))
"RTN","SYNGRAF",77,0)
 kill @tmp
"RTN","SYNGRAF",78,0)
 new tmp1 set tmp1=$name(@tmp@(1))
"RTN","SYNGRAF",79,0)
 new ok set ok=$$FTG^%ZISH(dir,file,tmp1,3)
"RTN","SYNGRAF",80,0)
 if 'ok do  quit  ;
"RTN","SYNGRAF",81,0)
 . write !,"error loading file ",dir_file
"RTN","SYNGRAF",82,0)
 if '$g(nocache) do toCache(tmp,fn,"html-cache")
"RTN","SYNGRAF",83,0)
 merge @rary=@tmp
"RTN","SYNGRAF",84,0)
 kill @tmp
"RTN","SYNGRAF",85,0)
 quit
"RTN","SYNGRAF",86,0)
 ;
"RTN","SYNGRAF",87,0)
queryContext(context,pred,obj) ; look up project specific 
"RTN","SYNGRAF",88,0)
 ; names and values from the context graph
"RTN","SYNGRAF",89,0)
 ; tbd
"RTN","SYNGRAF",90,0)
 quit obj
"RTN","SYNGRAF",91,0)
 ;
"RTN","SYNGRAF",92,0)
queryTag(rtn,tag) ; returns a json/mumps array of tagged items
"RTN","SYNGRAF",93,0)
 new graph set graph="seeGraph"
"RTN","SYNGRAF",94,0)
 kill @rtn
"RTN","SYNGRAF",95,0)
 new root set root=$$setroot(graph)
"RTN","SYNGRAF",96,0)
 new groot set groot=$na(@root@("graph"))
"RTN","SYNGRAF",97,0)
 if '$d(@groot@("pos","tag",tag)) quit
"RTN","SYNGRAF",98,0)
 new x1,y1 set (x1,y1)=""
"RTN","SYNGRAF",99,0)
 new cnt set cnt=0
"RTN","SYNGRAF",100,0)
 for  set x1=$order(@groot@("pos","tag",tag,x1)) quit:x1=""  do  ;
"RTN","SYNGRAF",101,0)
 . for  set y1=$order(@groot@("pos","tag",tag,x1,y1)) quit:y1=""  do  ;
"RTN","SYNGRAF",102,0)
 . . set cnt=cnt+1
"RTN","SYNGRAF",103,0)
 . . merge @rtn@(cnt)=@groot@(x1,y1)
"RTN","SYNGRAF",104,0)
 quit
"RTN","SYNGRAF",105,0)
 ;
"RTN","SYNGRAF",106,0)
fromCache(rary,name,graph) ; return a file from the cache
"RTN","SYNGRAF",107,0)
 if '$d(graph) set graph="html-cache"
"RTN","SYNGRAF",108,0)
 new zgn set zgn=$$setroot(graph)
"RTN","SYNGRAF",109,0)
 quit:'$data(@zgn@("graph","B",name))
"RTN","SYNGRAF",110,0)
 new zien set zien=$order(@zgn@("graph","B",name,""))
"RTN","SYNGRAF",111,0)
 quit:zien=""
"RTN","SYNGRAF",112,0)
 merge @rary=@zgn@("graph",zien)
"RTN","SYNGRAF",113,0)
 quit
"RTN","SYNGRAF",114,0)
 ;
"RTN","SYNGRAF",115,0)
toCache(arry,name,graph) ; put a file in the cache
"RTN","SYNGRAF",116,0)
 if '$d(graph) set graph="html-cache"
"RTN","SYNGRAF",117,0)
 new zgn set zgn=$$setroot(graph)
"RTN","SYNGRAF",118,0)
 new zien
"RTN","SYNGRAF",119,0)
 if $data(@zgn@("graph","B",name)) do  ;
"RTN","SYNGRAF",120,0)
 . set zien=$order(@zgn@("graph","B",name,""))
"RTN","SYNGRAF",121,0)
 . kill @zgn@("graph",zien)
"RTN","SYNGRAF",122,0)
 . kill @zgn@("graph","B",name,zien)
"RTN","SYNGRAF",123,0)
 if $get(zien)="" do  ;
"RTN","SYNGRAF",124,0)
 . set zien=$order(@zgn@("graph"," "),-1)+1
"RTN","SYNGRAF",125,0)
 merge @zgn@("graph",zien)=@arry
"RTN","SYNGRAF",126,0)
 set @zgn@("graph","B",name,zien)=""
"RTN","SYNGRAF",127,0)
 quit
"RTN","SYNGRAF",128,0)
 ;
"RTN","SYNGRAF",129,0)
beautify(inary,outary) ; pretty print a line of json
"RTN","SYNGRAF",130,0)
 new zg,zi set (zg,zi)=""
"RTN","SYNGRAF",131,0)
 for  set zi=$order(@inary@(zi)) quit:zi=""  set zg=zg_@inary@(zi)
"RTN","SYNGRAF",132,0)
 do ary2file("zg",^%WHOME,"json.json")
"RTN","SYNGRAF",133,0)
 zsy "python -m json.tool "_^%WHOME_"json.json > "_^%WHOME_"pretty-json.json"
"RTN","SYNGRAF",134,0)
 do file2ary(outary,^%WHOME,"pretty-json.json")
"RTN","SYNGRAF",135,0)
 q
"RTN","SYNGRAF",136,0)
 ;
"RTN","SYNGRAF",137,0)
ary2file(ary,dir,file) ;
"RTN","SYNGRAF",138,0)
 new tmp set tmp=$name(^TMP("yottawrk",$J))
"RTN","SYNGRAF",139,0)
 kill @tmp
"RTN","SYNGRAF",140,0)
 if '$data(@ary@(1)) do  ; not really an array
"RTN","SYNGRAF",141,0)
 . if $get(@ary)="" quit ; not a string either
"RTN","SYNGRAF",142,0)
 . merge @tmp@(1)=@ary ; input was a string
"RTN","SYNGRAF",143,0)
 else   merge @tmp=@ary
"RTN","SYNGRAF",144,0)
 new tmp1 set tmp1=$name(@tmp@(1))
"RTN","SYNGRAF",145,0)
 new ok set ok=$$GTF^%ZISH(tmp1,3,dir,file)
"RTN","SYNGRAF",146,0)
 if 'ok do  quit  ;
"RTN","SYNGRAF",147,0)
 . write !,"error saving file ",dir_file
"RTN","SYNGRAF",148,0)
 quit
"RTN","SYNGRAF",149,0)
 ;
"RTN","SYNGRAF",150,0)
file2ary(ary,dir,file)
"RTN","SYNGRAF",151,0)
 new tmp set tmp=$name(^TMP("yottawrk",$J))
"RTN","SYNGRAF",152,0)
 kill @tmp
"RTN","SYNGRAF",153,0)
 new tmp1 set tmp1=$name(@tmp@(1))
"RTN","SYNGRAF",154,0)
 new ok set ok=$$FTG^%ZISH(dir,file,tmp1,3)
"RTN","SYNGRAF",155,0)
 if 'ok do  quit  ;
"RTN","SYNGRAF",156,0)
 . write !,"error loading file ",dir_file
"RTN","SYNGRAF",157,0)
 merge @ary=@tmp
"RTN","SYNGRAF",158,0)
 kill @tmp
"RTN","SYNGRAF",159,0)
 quit
"RTN","SYNGRAF",160,0)
 ;
"SEC","^DIC",2002.801,2002.801,0,"AUDIT")
@
"SEC","^DIC",2002.801,2002.801,0,"DD")
@
"SEC","^DIC",2002.801,2002.801,0,"DEL")
@
"SEC","^DIC",2002.801,2002.801,0,"LAYGO")
@
"SEC","^DIC",2002.801,2002.801,0,"RD")
@
"SEC","^DIC",2002.801,2002.801,0,"WR")
@
"VER")
8.0^22.2
"^DD",2002.801,2002.801,0)
FIELD^^.01^1
"^DD",2002.801,2002.801,0,"DT")
3190622
"^DD",2002.801,2002.801,0,"IX","B",2002.801,.01)

"^DD",2002.801,2002.801,0,"NM","GRAPH")

"^DD",2002.801,2002.801,.01,0)
NAME^RFJ240^^0;1^K:$L(X)>240!($L(X)<3)!'(X'?1P.E) X
"^DD",2002.801,2002.801,.01,.1)
GRAPH NAME
"^DD",2002.801,2002.801,.01,1,0)
^.1
"^DD",2002.801,2002.801,.01,1,1,0)
2002.801^B
"^DD",2002.801,2002.801,.01,1,1,1)
S ^SYNGRAPH(2002.801,"B",$E(X,1,30),DA)=""
"^DD",2002.801,2002.801,.01,1,1,2)
K ^SYNGRAPH(2002.801,"B",$E(X,1,30),DA)
"^DD",2002.801,2002.801,.01,3)
Answer must be 3-240 characters in length.
"^DD",2002.801,2002.801,.01,"DT")
3190622
"^DIC",2002.801,2002.801,0)
GRAPH^2002.801
"^DIC",2002.801,2002.801,0,"GL")
^SYNGRAPH(2002.801,
"^DIC",2002.801,"B","GRAPH",2002.801)

**END**
**END**
